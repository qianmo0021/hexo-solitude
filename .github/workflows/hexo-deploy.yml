name: 部署 Hexo 并更新友链数据

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出代码
      - name: 📥 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 步骤2：设置 Node.js 环境（带 npm 缓存）
      - name: ⚙️ 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 步骤3：安装依赖
      - name: 📦 安装依赖
        run: |
          npm install -g hexo-cli
          npm install

      # 步骤4：执行 link.js 脚本生成 solitude_flink_count.json
      - name: 📝 生成友链统计文件
        run: node link.js

      # 步骤5：通过 API 更新到另一个仓库
      - name: 🔄 推送友链统计文件到外部仓库
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          FILE="./source/solitude_flink_count.json"
          REPO="qianmo0021/link"
          TARGET=$(basename "$FILE")

          echo "开始处理文件: $TARGET"

          # 检查文件是否存在
          RESPONSE=$(curl -s \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/contents/$TARGET")

          if echo "$RESPONSE" | jq -e '.sha' >/dev/null 2>&1; then
            SHA=$(echo "$RESPONSE" | jq -r '.sha')
            echo "文件已存在，将执行更新"
          else
            SHA=""
            echo "文件不存在，将创建新文件"
          fi

          CONTENT=$(base64 -w0 "$FILE")

          jq -n \
            --arg msg "自动更新 $TARGET 于 $(date +'%Y-%m-%d %H:%M:%S')" \
            --arg content "$CONTENT" \
            --arg sha "$SHA" \
            '{
              message: $msg,
              content: $content,
              sha: $sha
            }' > payload.json

          curl -s -X PUT \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d @payload.json \
            "https://api.github.com/repos/$REPO/contents/$TARGET"

          echo "✅ 文件 $TARGET 已成功推送到 $REPO"

      # 步骤6：构建 Hexo
      - name: 🏗️ 构建 Hexo 静态文件/更新追番页
        run: |
          hexo bangumi -u
          hexo clean
          hexo generate

      # 步骤7：部署到 GitHub Pages
      - name: 🚀 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          force_orphan: true
