name: "自动部署Hexo并更新友链数据"

on:
  push:
    branches:
      - main  # 只在main分支推送时触发

jobs:
  build-deploy:  # 合法英文ID
    name: "构建与部署"  # 中文可视化名称
    runs-on: ubuntu-latest

    steps:
      # ---------- 初始化步骤 ----------
      - name: "拉取仓库代码"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "设置Node.js环境"
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # ---------- 安装依赖 ----------
      - name: "安装项目依赖"
        run: |
          npm install -g hexo-cli
          npm install yamljs --save  # 显式安装缺失模块
          npm install  # 安装package.json中的其他依赖
          sudo apt-get update
          sudo apt-get install -y jq curl

      # ---------- 处理友链数据 ----------
      - name: "生成友链JSON数据"
        run: |
          node link.js
          ls -la ./source/  # 调试：验证文件生成

      - name: "上传友链数据到目标仓库"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          function update_file {
            local file_path=$1
            local target_repo="qianmo0021/link"
            local target_file=$(basename "$file_path")
            
            echo "正在处理文件: $target_file"
            
            # 检查文件是否已存在
            RESPONSE=$(curl -s \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$target_repo/contents/$target_file")
            
            if echo "$RESPONSE" | jq -e '.sha' >/dev/null 2>&1; then
              SHA=$(echo "$RESPONSE" | jq -r '.sha')
              echo "文件已存在，执行更新操作"
            else
              SHA=""
              echo "文件不存在，执行创建操作"
            fi
            
            # 编码文件内容
            CONTENT=$(base64 -w0 "$file_path")
            
            # 构造请求数据
            REQUEST_DATA=$(jq -n \
              --arg msg "自动更新-$target_file-$(date +'%Y-%m-%d %H:%M:%S')" \
              --arg content "$CONTENT" \
              --arg sha "$SHA" \
              '{
                message: $msg,
                content: $content,
                sha: $sha
              }')
            
            # 执行API请求
            curl -X PUT \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/$target_repo/contents/$target_file" \
              -d "$REQUEST_DATA"
            
            echo "文件 $target_file 更新成功"
          }

          update_file "./source/solitude_flink_count.json"

      # ---------- Hexo构建部署 ----------
      - name: "构建Hexo站点"
        run: |
          hexo bangumi -u  # 更新追番数据（可选）
          hexo clean
          hexo generate

      - name: "部署到GitHub Pages"
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          force_orphan: true  # 强制清空目标分支